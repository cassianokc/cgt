program - KEYWORD_PROGRAM
myprogram - IDENTIFIER
; - PONCTUATOR_SEMICOLON
var - KEYWORD_VAR
a - IDENTIFIER
, - PONCTUATOR_COMMA
a1 - IDENTIFIER
, - PONCTUATOR_COMMA
b - IDENTIFIER
: - PONCTUATOR_DDOTS
integer - KEYWORD_INTEGER
begin - KEYWORD_BEGIN
read - IDENTIFIER
( - PONCTUATOR_LPAREN
a - IDENTIFIER
) - PONCTUATOR_RPAREN
; - PONCTUATOR_SEMICOLON
a1 - IDENTIFIER
:= - OPERATOR_ATRIB
a1 - IDENTIFIER
* - OPERATOR_MUL
2 - CONSTANT_INTEGER
; - PONCTUATOR_SEMICOLON
while - KEYWORD_WHILE
( - PONCTUATOR_LPAREN
a1 - IDENTIFIER
> - OPERATOR_GREATER
0 - CONSTANT_INTEGER
) - PONCTUATOR_RPAREN
do - KEYWORD_DO
begin - KEYWORD_BEGIN
write - IDENTIFIER
( - PONCTUATOR_LPAREN
a1 - IDENTIFIER
) - PONCTUATOR_RPAREN
; - PONCTUATOR_SEMICOLON
a1 - IDENTIFIER
:= - OPERATOR_ATRIB
a1 - IDENTIFIER
- - OPERATOR_MINUS
1 - CONSTANT_INTEGER
; - PONCTUATOR_SEMICOLON
end - KEYWORD_END
; - PONCTUATOR_SEMICOLON
for - KEYWORD_FOR
b - IDENTIFIER
:= - OPERATOR_ATRIB
0 - CONSTANT_INTEGER
to - KEYWORD_TO
10 - CONSTANT_INTEGER
do - KEYWORD_DO
begin - KEYWORD_BEGIN
b - IDENTIFIER
:= - OPERATOR_ATRIB
b - IDENTIFIER
+ - OPERATOR_PLUS
2 - CONSTANT_INTEGER
; - PONCTUATOR_SEMICOLON
a - IDENTIFIER
:= - OPERATOR_ATRIB
a - IDENTIFIER
- - OPERATOR_MINUS
1 - CONSTANT_INTEGER
; - PONCTUATOR_SEMICOLON
end - KEYWORD_END
; - PONCTUATOR_SEMICOLON
if - KEYWORD_IF
a - IDENTIFIER
<> - OPERATOR_NEQUAL
b - IDENTIFIER
then - KEYWORD_THEN
write - IDENTIFIER
( - PONCTUATOR_LPAREN
a - IDENTIFIER
) - PONCTUATOR_RPAREN
; - PONCTUATOR_SEMICOLON
end - KEYWORD_END
. - PONCTUATOR_PERIOD
